#!/bin/bash

# Source the config files
source ./config_chat_id
source ./config_bot_token

# Set other variables
IP="117.250.113.139"
MESSAGE_DOWN="Ping to $IP failed!"
MESSAGE_UP="Ping to $IP restored!"
CACHE_FILE="/tmp/ping_status_cache"
DOWNTIME_START_FILE="/tmp/ping_downtime_start"
DOWNTIME_LOG="/tmp/ping_downtime_log"

# Function to send Telegram message
send_telegram_message() {
  local message="$1"
  curl -s -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" -d chat_id=$CHAT_ID -d text="$message" > /dev/null 2>&1
}

# Function to calculate total downtime for last month
calculate_monthly_downtime() {
  local last_month=$(date -d "last month" +%Y-%m)
  local total_downtime=0

  while IFS= read -r line; do
    # Extract the timestamp and duration
    timestamp=$(echo "$line" | cut -d' ' -f1)
    duration=$(echo "$line" | cut -d' ' -f2)
    
    # Check if the entry is from last month
    if [[ "$timestamp" == "$last_month"* ]]; then
      total_downtime=$((total_downtime + duration))
    fi
  done < "$DOWNTIME_LOG"

  # Convert total downtime to hours, minutes, and seconds
  local hours=$((total_downtime / 3600))
  local minutes=$(((total_downtime % 3600) / 60))
  local seconds=$((total_downtime % 60))

  echo "Total Downtime for $last_month: ${hours}h ${minutes}m ${seconds}s"
}

# Ping the IP address
ping -c 1 $IP > /dev/null 2>&1

# Check the exit status of the ping command
if [ $? -ne 0 ]; then
  # Check if the ping was previously down
  if [ ! -f "$CACHE_FILE" ] || [ "$(cat "$CACHE_FILE")" != "down" ]; then
    # Record the downtime start time
    echo "$(date +%s)" > "$DOWNTIME_START_FILE"
    # Log the downtime start time
    echo "$(date +%Y-%m-%d\ %H:%M:%S) 0" >> "$DOWNTIME_LOG"
    # Send Telegram message
    send_telegram_message "$MESSAGE_DOWN"
    # Update cache file
    echo "down" > "$CACHE_FILE"
  else
    # Check if 1 hour has passed since the last message
    if [ "$(find "$CACHE_FILE" -mmin +60)" ]; then
      send_telegram_message "$MESSAGE_DOWN"
      touch "$CACHE_FILE"
    fi
  fi
else
  # Check if the ping was previously down
  if [ -f "$CACHE_FILE" ] && [ "$(cat "$CACHE_FILE")" == "down" ]; then
    # Calculate the downtime duration
    DOWNTIME_START=$(cat "$DOWNTIME_START_FILE")
    DOWNTIME_END=$(date +%s)
    DOWNTIME_DURATION=$((DOWNTIME_END - DOWNTIME_START))
    
    # Log the downtime duration
    echo "$(date +%Y-%m-%d\ %H:%M:%S) $DOWNTIME_DURATION" >> "$DOWNTIME_LOG"

    # Send Telegram message with downtime duration
    MESSAGE_UP_WITH_DURATION="Ping to $IP restored! Downtime duration: $((DOWNTIME_DURATION / 3600))h $(((DOWNTIME_DURATION % 3600) / 60))m $((DOWNTIME_DURATION % 60))s"
    send_telegram_message "$MESSAGE_UP_WITH_DURATION"
    
    # Remove cache files
    rm "$CACHE_FILE"
    rm "$DOWNTIME_START_FILE"
  fi
fi

# At the start of a new month, calculate and send the monthly report
if [ "$(date +%d)" -eq 1 ]; then
  MONTHLY_REPORT=$(calculate_monthly_downtime)
  send_telegram_message "$MONTHLY_REPORT"
fi
